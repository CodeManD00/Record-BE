# application.yml (single file with profiles)

# ── Common (공통) ─────────────────────────────────────────────────────────────
spring:
  profiles:
    active: dev                            # 기본 실행 프로필
  datasource:
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 200MB                 # Whisper는 25MB 제한이므로 서버단에서 별도 가드 권장
      max-request-size: 200MB

openai:
  api:
    key: ${OPENAI_API_KEY}                 # ▶ 환경변수로 주입 (Whisper/Chat 공용 키)
  url:
    transcription: https://api.openai.com/v1/audio/transcriptions
    chat: https://api.openai.com/v1/chat/completions
  model:
    transcription: whisper-1               # ▶ Whisper API 모델명
    chat: gpt-4o-mini                      # (선택) 기존 GPT 요약/질문 생성에 사용할 모델
  limits:
    whisperMaxFileMB: 25                   # ▶ Whisper 단일 파일 권장 상한(서버에서 사전 체크)

stt:
  provider: openai                         # openai | (gcp|aws|azure 로 향후 전환 대비)
  language: ko                             # 기본 인식 언어 (자동감지 쓰려면 제거)
  ffmpeg:
    path: ${FFMPEG_PATH:ffmpeg}            # 필요 시 분할/포맷 변환 용

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID:}
      secret-key: ${AWS_SECRET_ACCESS_KEY:}
    region:
      static: ap-northeast-2
    s3:
      bucket: recording-bucket             # 이미지 생성/정적자원 용도

# 선택: JWT를 외부화(추후 JwtUtil에서 @Value로 받도록 개선)
jwt:
  secret: ${JWT_SECRET:change-me-32bytes-minimum-aaaaaaaaaaaaaaa}
  expiration-ms: ${JWT_EXPIRATION_MS:3600000}  # 1시간

logging:
  level:
    root: INFO

---
# ── DEV 프로필 ────────────────────────────────────────────────────────────────
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/recorddb
    username: postgres
    password: recordpass

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: true

logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# ── PROD 프로필 ───────────────────────────────────────────────────────────────
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:postgresql://3.34.xxx.xxx:5432/recorddb   # 실제 IP/호스트로 교체
    username: recorduser
    password: ${DB_PASSWORD}                             # 환경변수로 주입

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

logging:
  level:
    org.springframework.web: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
